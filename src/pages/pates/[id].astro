---
import {
    SITE_URL,
    DEFAULT_TITLE, 
    DEFAULT_DESCRIPTION, 
    DEFAULT_KEYWORDS, 
    DEFAULT_AUTHOR, 
    DEFAULT_OG_IMAGE, 
    DEFAULT_CSS_FILES,
    DEFAULT_JS_FILES,
    DEFAULT_LANG
} from "../../const";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Grid from "@components/Elements/Grid1.astro";
import HeroSection from "@components/Sections/HeroSectionGallery.astro";
import PastaSelect from "@components/Custom/PastaSelect.astro";

// Récupération des produits et des catégories
export async function getStaticPaths() {
    const products = await getCollection('products');
    return products.map((product) => ({
        params: { id: product.slug },
        props: { product },
    }));
}

// Récupérer les catégories
const products = await getCollection('products');
const categories = await getCollection('categories');
const categoriesDict = Object.fromEntries(
  categories.map(category => [category.slug, category.data])
);

const { product } = Astro.props;
const { data } = product;
const { title, description, price, image, gallery, category } = data;

// Associer le produit à la catégorie correspondante
const categoryData = categoriesDict[category.slug] || null;

// Déclaration des constantes pour la page
const pageTitle = title;
const pageDescription = description;
const pageKeywords = `produit, ${categoryData?.title || ''}`;
const pageAuthor = DEFAULT_AUTHOR;
const pageOgImage = image.src;
const pageCanonicalUrl = `${SITE_URL}/products/${product.slug}`;
const pagePrefetchUrls = [];
const pageCssFiles = [...DEFAULT_CSS_FILES];
const pageJsFiles = [...DEFAULT_JS_FILES];
const pageLang = DEFAULT_LANG;
const pageRobots = "index, follow";

// Construction des breadcrumbs
const buildBreadcrumbs = () => {
  const breadcrumbs = [{ name: 'Accueil', href: '/' }];
  
  breadcrumbs.push({ name: 'Pâtes', href: '/pates' }); // Lien vers la liste de pâtes
  
  breadcrumbs.push({ name: title, href: `/pates/${product.slug}` });
  
  return breadcrumbs;
};

const breadcrumbs = buildBreadcrumbs();
---

<Layout
  title={pageTitle}
  description={pageDescription}
  keywords={pageKeywords}
  author={pageAuthor}
  ogImage={pageOgImage}
  canonicalUrl={pageCanonicalUrl}
  prefetchUrls={pagePrefetchUrls}
  cssFiles={pageCssFiles}
  jsFiles={pageJsFiles}
  lang={pageLang}
  robots={pageRobots}
>

  <HeroSection 
    title={title} 
    description={description}
    images={gallery || [
      { src: "https://staging.renovannecy.fr/wp-content/uploads/2024/08/image00006-removebg-preview-e1723041294375.png", alt: "example" }
    ]}
  />

  <Grid
tag="section"
gap="gap-16 md:gap-8" 
backgroundColor="bg-secondary" 
yPadding="py-[80px]"
xPadding="px-[80px]"
overflowHidden={false} 
>
<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="flex items-center text-sm text-gray-600">
  <ul class="flex space-x-2">
    {breadcrumbs.map((crumb, index) => (
      <li>
        {index > 0 && <span class="mx-2">/</span>}
        <a href={crumb.href} class="hover:underline text-black hover:text-white">{crumb.name}</a>
      </li>
    ))}
  </ul>
</nav>

<!-- Catégorie actuelle -->
<h2 class="text-h2">{title}</h2>
<p class="text-body">{description}</p>

  <PastaSelect product={product} currentCategory={categoryData} categories={categories} />
  </Grid>
</Layout>
