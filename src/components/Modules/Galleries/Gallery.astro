---
// Gallery.astro
export interface Props {
  images: { src: string; alt: string }[];
}

const { images }: Props = Astro.props;
---

<div class="gallery">
  {images.map((image, index) => (
    <img
      src={image.src}
      alt={image.alt}
      loading="lazy"
      class={`gallery-image gallery-image-${index + 1}`}
    />
  ))}
</div>

<style>
/* Base styles for gallery */
.gallery {
  --d: 10s;
  display: grid;
  width: 250px; /* Taille d'origine */
  margin-right: auto;
  margin-left: auto;
  position: relative;
}

.gallery img {
  position: absolute;
  width: 100%;
  aspect-ratio: 1;
  object-fit: cover;
  border: 10px solid #f2f2f2;
  box-shadow: 0 0 4px #0007;
  animation: slide var(--d) infinite, z-order var(--d) infinite steps(1);
}

.gallery img:nth-child(1) {
  animation-delay: calc(0 * var(--d));
  --r: 7deg;
}

.gallery img:nth-child(2) {
  animation-delay: calc(-0.2 * var(--d));
  --r: 6deg;
}

.gallery img:nth-child(3) {
  animation-delay: calc(-0.4 * var(--d));
  --r: 18deg;
}

.gallery img:nth-child(4) {
  animation-delay: calc(-0.6 * var(--d));
  --r: 10deg;
}

.gallery img:nth-child(5) {
  animation-delay: calc(-0.8 * var(--d));
  --r: -5deg;
}

@keyframes slide {
  10% {
    transform: translateX(120%) rotate(var(--r));
  }
  0%, 100%, 20% {
    transform: translateX(0%) rotate(var(--r));
  }
}

@keyframes z-order {
  10%, 20% {
    z-index: 1;
  }
  80% {
    z-index: 2;
  }
}
</style>
